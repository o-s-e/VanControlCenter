<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_can_interface_8cpp" kind="file">
    <compoundname>CanInterface.cpp</compoundname>
    <includes refid="_can_interface_8h" local="yes">CanInterface.h</includes>
    <incdepgraph>
      <node id="6">
        <label>Timer.h</label>
      </node>
      <node id="3">
        <label>CanInterface.h</label>
        <link refid="_can_interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>BitArray.h</label>
      </node>
      <node id="5">
        <label>due_can.h</label>
      </node>
      <node id="15">
        <label>HWConfig.h</label>
        <link refid="_h_w_config_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ByteBuffer.h</label>
      </node>
      <node id="7">
        <label>ChannelsBuffer.h</label>
        <link refid="_channels_buffer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>WProgram.h</label>
      </node>
      <node id="2">
        <label>C:/Users/ovsteenb/Documents/Visual Studio 2017/Projects/VanControlCenter/VanControlCenter/CanInterface.cpp</label>
        <link refid="CanInterface.cpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ChannelsConfig.h</label>
        <link refid="_channels_config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>arduino.h</label>
      </node>
      <node id="10">
        <label>Vector.h</label>
      </node>
      <node id="11">
        <label>Channel.h</label>
        <link refid="_channel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Utils.h</label>
      </node>
      <node id="13">
        <label>Configuration.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" prot="public" static="no" mutable="no">
        <type><ref refid="class_can_interface_class" kindref="compound">CanInterfaceClass</ref></type>
        <definition>CanInterfaceClass canInterface</definition>
        <argsstring></argsstring>
        <name>canInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ovsteenb/Documents/Visual Studio 2017/Projects/VanControlCenter/VanControlCenter/CanInterface.cpp" line="243" column="1" bodyfile="C:/Users/ovsteenb/Documents/Visual Studio 2017/Projects/VanControlCenter/VanControlCenter/CanInterface.cpp" bodystart="243" bodyend="-1"/>
        <referencedby refid="class_debug_form_class_1a87c5b140a08a08ee3d338a6cfad1c1f8" compoundref="_debug_form_8cpp" startline="17" endline="33">DebugFormClass::onEvent</referencedby>
        <referencedby refid="class_can_interface_class_1a133730c2c7b0f1817ec1b87b4b5eef36" compoundref="_can_interface_8cpp" startline="136" endline="188">CanInterfaceClass::streamOverCan</referencedby>
        <referencedby refid="class_can_interface_class_1aa3ea6188d1c5fe0d6a6008a4040a5bb7" compoundref="_can_interface_8cpp" startline="190" endline="241">CanInterfaceClass::waitForStreamOverCan</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_can_interface_8h" kindref="compound">CanInterface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_can_interface_class_1aeec96952fcedda6c0489e650cfda3b23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1aeec96952fcedda6c0489e650cfda3b23" kindref="member">CanInterfaceClass::init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>canSpeed,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>minID,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>maxID)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>Can0.begin(canSpeed);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>Can0.watchForRange(minID,<sp/>maxID);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.resize(<ref refid="_can_interface_8h_1a600f52ce657fa6599dcf3c34780ce02a" kindref="member">DEBUG_RX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8cpp_1ab741d4d7eac8d06dd385f0fdda3995fd" kindref="member">Log</ref>.<ref refid="class_logger_class_1ac26d7cd726ff22b4457f3c5d3da1fe74" kindref="member">i</ref>(<ref refid="_can_interface_8h_1a4791c142b857f44449cc8ad8d22ef045" kindref="member">CAN_TAG</ref>)<sp/>&lt;&lt;<sp/>F(</highlight><highlight class="stringliteral">&quot;Can0<sp/>interface<sp/>initialized&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="logger_8h_1a8b61bb91083737b96d0b3b27d580bd63a118a7d989968e11a33b264ab35507dca" kindref="member">Endl</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_can_interface_class_1ad2b930d86db497f5f18003ef43693c79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1ad2b930d86db497f5f18003ef43693c79" kindref="member">CanInterfaceClass::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>a<sp/>frame<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Can0.available())<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8cpp_1ab741d4d7eac8d06dd385f0fdda3995fd" kindref="member">Log</ref>.<ref refid="class_logger_class_1ac26d7cd726ff22b4457f3c5d3da1fe74" kindref="member">i</ref>(<ref refid="_can_interface_8h_1a4791c142b857f44449cc8ad8d22ef045" kindref="member">CAN_TAG</ref>)<sp/>&lt;&lt;<sp/>F(</highlight><highlight class="stringliteral">&quot;Can0<sp/>available&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="logger_8h_1a8b61bb91083737b96d0b3b27d580bd63a118a7d989968e11a33b264ab35507dca" kindref="member">Endl</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can0.read(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>callback<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Invoke<sp/>the<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8cpp_1ab741d4d7eac8d06dd385f0fdda3995fd" kindref="member">Log</ref>.<ref refid="class_logger_class_1ac26d7cd726ff22b4457f3c5d3da1fe74" kindref="member">i</ref>(<ref refid="_can_interface_8h_1a4791c142b857f44449cc8ad8d22ef045" kindref="member">CAN_TAG</ref>)<sp/>&lt;&lt;<sp/>F(</highlight><highlight class="stringliteral">&quot;Can0<sp/>callback<sp/>is<sp/>set&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/><ref refid="logger_8h_1a8b61bb91083737b96d0b3b27d580bd63a118a7d989968e11a33b264ab35507dca" kindref="member">Endl</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref>(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>packet<sp/>to<sp/>the<sp/>can<sp/>analyzer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a2a90f838958a2537f1ce31b8db1a1e84" kindref="member">writePacketOnDebugSerial</ref>(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>can<sp/>analyzer<sp/>has<sp/>sent<sp/>packet,<sp/>then<sp/>read<sp/>and<sp/>parse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a705cac6a31802cd70c8b4e700d873bd1" kindref="member">readFromDebugSerial</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a8672ec381d05c3bd5a929a14b89fab8e" kindref="member">parseSerialDebugCmd</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//R/W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_can_interface_class_1ad5d32042f9b0d138f0375ef26c6df5ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1ad5d32042f9b0d138f0375ef26c6df5ad" kindref="member">CanInterfaceClass::available</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Can0.available();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_can_interface_class_1a6123b970f66a6682cc99ad0a7d35f764" refkind="member"><highlight class="normal">CAN_FRAME&amp;<sp/><ref refid="class_can_interface_class_1a6123b970f66a6682cc99ad0a7d35f764" kindref="member">CanInterfaceClass::read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>next<sp/>available<sp/>can<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Can0.available())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can0.read(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Echo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a2a90f838958a2537f1ce31b8db1a1e84" kindref="member">writePacketOnDebugSerial</ref>(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Invalid<sp/>frame<sp/>if<sp/>nothing<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">CanInterfaceClass::send</ref>(<ref refid="class_can_i_d_1af16576d487900fec0d246e8f7beeea15" kindref="member">CanID::IDs</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>byte*<sp/>data,<sp/>byte<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>frame<sp/>over<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.length<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.data.bytes,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Can0.sendFrame(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Echo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a2a90f838958a2537f1ce31b8db1a1e84" kindref="member">writePacketOnDebugSerial</ref>(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//Event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_can_interface_class_1a8842091ea8a0c7c218d12e58e79e5795" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a8842091ea8a0c7c218d12e58e79e5795" kindref="member">CanInterfaceClass::setCanEventCallBack</ref>(<ref refid="_can_interface_8h_1ab755a81c4dee837a651cbf4c979788a3" kindref="member">CanEventHandler</ref><sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref><sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_can_interface_class_1acce9206ac1d4435ce38e51ffce325804" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1acce9206ac1d4435ce38e51ffce325804" kindref="member">CanInterfaceClass::removeCanEventCallBack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_can_interface_class_1a0322209e5fcb05c254dd0227cf2336ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a0322209e5fcb05c254dd0227cf2336ab" kindref="member">CanInterfaceClass::setCanDebugSerial</ref>(Stream*<sp/>debugSerial)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Attach<sp/>interrupt<sp/>for<sp/>Can<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;debugSerial<sp/>=<sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_can_interface_class_1a2a90f838958a2537f1ce31b8db1a1e84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a2a90f838958a2537f1ce31b8db1a1e84" kindref="member">CanInterfaceClass::writePacketOnDebugSerial</ref>(CAN_FRAME&amp;<sp/>packet)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;print(<ref refid="_can_interface_8h_1a4173ee09cd4742cb333a1439c452c80e" kindref="member">CAD_MSG_HEADER</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;write(packet.id<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;write(packet.id);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;write(packet.length);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;write((byte*)packet.data.bytes,<sp/>packet.length);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_can_interface_class_1a705cac6a31802cd70c8b4e700d873bd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a705cac6a31802cd70c8b4e700d873bd1" kindref="member">CanInterfaceClass::readFromDebugSerial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>from<sp/>debug<sp/>Serial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;available())<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;available()<sp/>&amp;&amp;<sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.getSize()<sp/>&lt;<sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.getCapacity())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.append(<ref refid="class_can_interface_class_1af5e839d4d2b629d3cb8cc2d140be5a2a" kindref="member">debugSerial</ref>-&gt;read());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_can_interface_class_1a8672ec381d05c3bd5a929a14b89fab8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_can_interface_class_1a8672ec381d05c3bd5a929a14b89fab8e" kindref="member">CanInterfaceClass::parseSerialDebugCmd</ref>()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Parse<sp/>debug<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.indexOf(<ref refid="_can_interface_8h_1a2ab392c10e3d12dbbebf941cd7d34b8e" kindref="member">CAN_MSG_HEADER</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>id,<sp/>size;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CMD<sp/>Packet<sp/>-&gt;<sp/><sp/>CMD<sp/>+<sp/>Size<sp/>+<sp/>Command<sp/>+<sp/>Data<sp/><sp/><sp/><sp/>Size<sp/>=<sp/>sizeof(Command)<sp/>+<sp/>sizeof(data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_can_interface_8h_1a2ab392c10e3d12dbbebf941cd7d34b8e" kindref="member">CAN_MSG_HEADER</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.getSize()<sp/>&gt;<sp/>index<sp/>+<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>((<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>[index]<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>[index<sp/>+<sp/>1]<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>[index<sp/>+<sp/>2]<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.getSize()<sp/>&gt;=<sp/>index<sp/>+<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>((<ref refid="class_can_i_d_1af16576d487900fec0d246e8f7beeea15" kindref="member">CanID::IDs</ref>)</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>[index],<sp/>size);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.length<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>.data.bytes,<sp/>&amp;<ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>[index],<sp/>size);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a682801fe676f0aa2c73d324c89379ae8" kindref="member">canEvent</ref>(<ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_interface_class_1a9f2ad4e36dddd34c4f38ea820fb2ec97" kindref="member">rxBuffer</ref>.remove(0,<sp/>index<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//Stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_can_interface_class_1a133730c2c7b0f1817ec1b87b4b5eef36" refkind="member"><highlight class="normal"><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803a" kindref="member">CanStreamResult</ref><sp/><ref refid="class_can_interface_class_1a133730c2c7b0f1817ec1b87b4b5eef36" kindref="member">CanInterfaceClass::streamOverCan</ref>(<ref refid="class_can_i_d_1af16576d487900fec0d246e8f7beeea15" kindref="member">CanID::IDs</ref><sp/>canID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>openStreamCmd,<sp/>byte*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>ack;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>q;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Timer<sp/>timeOut;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>CAN_FRAME<sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>the<sp/>stream<sp/>over<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>(canID,<sp/>(byte*)openStreamCmd,<sp/>strlen(openStreamCmd));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Needed<sp/>packets<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>size<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>size<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ack<sp/>=<sp/>getAck(buffer,<sp/>size);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOGLN(size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOG_ARR(buffer,<sp/>size,<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>q;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>(canID,<sp/>buffer<sp/>+<sp/>i<sp/>*<sp/>8,<sp/>8);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(<ref refid="_can_interface_8h_1a22b8360628a7f40d45da8c983b3e04c1" kindref="member">PACKET_DELAY</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>remaining<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>(canID,<sp/>buffer<sp/>+<sp/>q<sp/>*<sp/>8,<sp/>r);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(<ref refid="_can_interface_8h_1a22b8360628a7f40d45da8c983b3e04c1" kindref="member">PACKET_DELAY</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>ack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>(canID,<sp/>&amp;ack,<sp/>1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Init<sp/>timeout<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>timeOut.setDuration(<ref refid="_can_interface_8h_1ab968c2a7a3938ef37739457da7d32a43" kindref="member">CMD_TIMEOUT</ref>).start();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!timeOut.hasFinished())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>all<sp/>response<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1a6123b970f66a6682cc99ad0a7d35f764" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>packet<sp/>has<sp/>the<sp/>stream<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame.id<sp/>==<sp/>canID)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>response<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)frame.data.bytes,<sp/><ref refid="_can_interface_8h_1a31755b1af9a4edbf33591950818b98e9" kindref="member">OK_CMD</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aa1230137cb1670af41522e68d576326d9" kindref="member">SUCCES</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>response<sp/>is<sp/>ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)frame.data.bytes,<sp/><ref refid="_can_interface_8h_1aa47312688066211e9db14aa29b0dd6db" kindref="member">ERROR_CMD</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aa2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aaad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_can_interface_class_1aa3ea6188d1c5fe0d6a6008a4040a5bb7" refkind="member"><highlight class="normal"><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803a" kindref="member">CanStreamResult</ref><sp/><ref refid="class_can_interface_class_1aa3ea6188d1c5fe0d6a6008a4040a5bb7" kindref="member">CanInterfaceClass::waitForStreamOverCan</ref>(<ref refid="class_can_i_d_1af16576d487900fec0d246e8f7beeea15" kindref="member">CanID::IDs</ref><sp/>canID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>openStreamCmd,<sp/>byte*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectedBytes)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>ack;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>memIndex;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>Timer<sp/>timeOut;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>CAN_FRAME<sp/><ref refid="class_can_interface_class_1a6e9543c67a5fda47e80ae7de45b24378" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>the<sp/>stream<sp/>over<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1ab15e3824e27c9402e63754d0c94f04ff" kindref="member">send</ref>(canID,<sp/>(byte*)openStreamCmd,<sp/>strlen(openStreamCmd));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>timeout<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>timeOut.setDuration(<ref refid="_can_interface_8h_1ab968c2a7a3938ef37739457da7d32a43" kindref="member">CMD_TIMEOUT</ref>).start();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>memIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>can<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!timeOut.hasFinished()<sp/>&amp;&amp;<sp/>memIndex<sp/>&lt;<sp/>expectedBytes)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1a6123b970f66a6682cc99ad0a7d35f764" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>responses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame.id<sp/>==<sp/>canID)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//On<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)frame.data.bytes,<sp/><ref refid="_can_interface_8h_1aa47312688066211e9db14aa29b0dd6db" kindref="member">ERROR_CMD</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aa2fd6f336d08340583bd620a7f5694c90" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Save<sp/>data<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+<sp/>memIndex,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.data.bytes,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memIndex<sp/>+<sp/>frame.length<sp/>&gt;<sp/>expectedBytes<sp/>?<sp/>expectedBytes<sp/>-<sp/>memIndex<sp/>:<sp/>frame.length<sp/><sp/><sp/></highlight><highlight class="comment">//Buffer<sp/>over-run<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memIndex<sp/>+=<sp/>frame.length;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memIndex<sp/>&lt;<sp/>expectedBytes)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aaad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>ack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!timeOut.hasFinished())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>.<ref refid="class_can_interface_class_1a6123b970f66a6682cc99ad0a7d35f764" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame.id<sp/>==<sp/>canID<sp/>&amp;&amp;<sp/>frame.length<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ack<sp/>=<sp/>frame.data.bytes[0];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ack<sp/>!=<sp/>getAck(buffer,<sp/>expectedBytes))<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOGLN((int)ack);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//LOGLN((int)getAck(buffer,<sp/>expectedBytes))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aa7b319bfadf737063395ca93ea2c0671f" kindref="member">WRONG_ACK</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aa1230137cb1670af41522e68d576326d9" kindref="member">SUCCES</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_can_interface_8h_1a2e305d18f97737591dafd994465d803aaad9dee005a3d0f9137b2ac1e0869f89b" kindref="member">TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="_can_interface_8h_1a5b68dbdb3873451ccc4f317e655e074c" refkind="member"><highlight class="normal"><ref refid="class_can_interface_class" kindref="compound">CanInterfaceClass</ref><sp/><ref refid="_can_interface_8cpp_1a5b68dbdb3873451ccc4f317e655e074c" kindref="member">canInterface</ref>;</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ovsteenb/Documents/Visual Studio 2017/Projects/VanControlCenter/VanControlCenter/CanInterface.cpp"/>
  </compounddef>
</doxygen>
